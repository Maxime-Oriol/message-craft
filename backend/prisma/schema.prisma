// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model contact_message {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String
  email     String
  topic     String
  other     String?
  message   String
  created_at DateTime @default(now())
}

model craft_message {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String
  platform   String
  intent     String
  generated  String   // le message généré par le modèle
  message    String?   // le message final modifié par l'utilisateur
  transferred_to_dataset  Boolean @default(false)
  created_at  DateTime @default(now())

  llm_datasets llm_dataset[]
}

model llm_dataset {
  id                    String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  message_id            String @db.Uuid
  similarity_cosine     Float
  distance_levenshtein  Float
  score_reliability     Float?
  pii_factor            Float
  pii_message           String?
  validated             Boolean @default(false)
  needs_validation      Boolean @default(true)
  created_at            DateTime @default(now())

  craft_message         craft_message @relation(fields: [message_id], references: [id], onDelete: Cascade)
}

model llm_model_version {
  id                  String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  model_name          String
  trained_at          DateTime @default(now())
  data_count          Int
  score_validation    Float
}